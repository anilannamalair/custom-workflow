workflow:
  steps:
    - pipeline {
    -     agent any
    -     environment {
    -         // Define the build tool and scan tool as environment variables
    -         BUILD_TOOL = 'Maven'
    -         SCAN_TOOL = 'SonarQube'
    -     }
    -     stages {
    -         stage('Build') {
    -             steps {
    -                 script {
    -                     // Print out the build tool being used
    -                     echo "Using build tool: ${env.BUILD_TOOL}"
    -                 }
    -                 // Actual build step using Maven
    -                 sh 'mvn clean package'
    -             }
    -         }
    -         stage('Test') {
    -             steps {
    -                 script {
    -                     // Print out the build tool being used during testing
    -                     echo "Using build tool: ${env.BUILD_TOOL}"
    -                 }
    -                 // Actual test step using Maven
    -                 sh 'mvn test'
    -             }
    -         }
    -         stage('SonarQube Scan') {
    -             steps {
    -                 script {
    -                     // Print out the scan tool being used
    -                     echo "Using scan tool: ${env.SCAN_TOOL}"
    -                 }
    -                 // SonarQube analysis step
    -                 withSonarQubeEnv('MySonarQubeServer') {
    -                     sh 'mvn sonar:sonar'
    -                 }
    -             }
    -         }
    -         stage('Deploy') {
    -             steps {
    -                 script {
    -                     // Print out the build tool during deployment
    -                     echo "Using build tool: ${env.BUILD_TOOL}"
    -                 }
    -                 // Deployment step (this could be using SCP or any other method)
    -                 sh 'scp target/artifact-1.0.0.jar user@server:/path/to/deploy'
    -             }
    -         }
    -     }
    - }
    - 